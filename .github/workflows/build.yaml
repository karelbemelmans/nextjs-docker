name: Build & Publish

on:
    push:
        branches:
            - "**"
            - "!dependabot/**"
    workflow_dispatch:

env:
    REGISTRY: ghcr.io
    NODE_VERSION: 20

jobs:
    next-build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup node
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ env.NODE_VERSION }}

            - name: Cache node modules
              id: cache-npm
              uses: actions/cache@v3
              env:
                  cache-name: cache-node-modules
              with:
                  # npm cache files are stored in `~/.npm` on Linux/macOS
                  path: ~/.npm
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-

            - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
              name: List the state of node modules
              continue-on-error: true
              run: npm list

            - name: Install dependencies
              run: npm install

            - name: npm build
              run: npm run build

            - name: Upload Next build
              uses: actions/upload-artifact@v3
              with:
                  name: build
                  path: |
                      .next
                      public
                  retention-days: 7

    docker-push:
        needs: next-build
        runs-on: ubuntu-latest

        permissions:
            contents: read
            packages: write

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Download next build # Download the above uploaded artifact
              uses: actions/download-artifact@v3
              with:
                  name: build

            - name: Login to container registry
              uses: docker/login-action@v2
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            # This action makes sure that we keep the exact same names and tags
            # as the source ones, we just prepend our own repository as a namespace
            # before it.
            #
            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v4
              with:
                  images: ${{ env.REGISTRY }}/${{ github.repository }}
                  tags: |
                      type=ref,event=branch
                      type=ref,event=pr
                      type=semver,pattern=v{{version}}
                      type=semver,pattern=v{{major}}.{{minor}}
                      type=semver,pattern=v{{major}}
                      type=sha

            # Build and push
            #
            # - amd64 and arm64 (think future proof)
            # - we keep the exact same name and tag
            # - publish as a package for this repository
            #
            - name: Build and push image
              uses: docker/build-push-action@v4
              with:
                  provenance: true
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
